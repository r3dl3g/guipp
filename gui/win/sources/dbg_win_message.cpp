/**
* @copyright (c) 2015-2016 Ing. Buero Rothfuss
*                          Riedlinger Str. 8
*                          70327 Stuttgart
*                          Germany
*                          http://www.rothfuss-web.de
*
* @author    <a href="mailto:armin@rothfuss-web.de">Armin Rothfuss</a>
*
* Project    standard lib
*
* Customer   -
*
* @brief     C++ API: windows message debug helper
*
* @file
*/


// --------------------------------------------------------------------------
//
// Common includes
//
#include <map>
#include <iomanip>
#include <ostream>

// --------------------------------------------------------------------------
//
// Library includes
//
#include "dbg_win_message.h"


#define DEFINE_MESSAGE(a) { a, #a }

namespace gui {

  namespace win {

    namespace detail {

      typedef std::map<core::event_id, const char*> message_map_t;

      message_map_t& get_message_map() {
        static message_map_t message_map = {
#ifdef Win32
          DEFINE_MESSAGE(WM_CREATE),
          DEFINE_MESSAGE(WM_DESTROY),

          DEFINE_MESSAGE(WM_MOVE),
          DEFINE_MESSAGE(WM_SIZE),
          DEFINE_MESSAGE(WM_ENTERSIZEMOVE),
          DEFINE_MESSAGE(WM_EXITSIZEMOVE),
          DEFINE_MESSAGE(WM_MOVING),
          DEFINE_MESSAGE(WM_SIZING),
          DEFINE_MESSAGE(WM_GETMINMAXINFO),

          DEFINE_MESSAGE(WM_WINDOWPOSCHANGED),
          DEFINE_MESSAGE(WM_WINDOWPOSCHANGING),
          DEFINE_MESSAGE(WM_SHOWWINDOW),
          DEFINE_MESSAGE(WM_QUERYOPEN),

          DEFINE_MESSAGE(WM_ACTIVATE),
          DEFINE_MESSAGE(WM_ACTIVATEAPP),
          DEFINE_MESSAGE(WM_SETFOCUS),
          DEFINE_MESSAGE(WM_KILLFOCUS),
          DEFINE_MESSAGE(WM_ENABLE),

          DEFINE_MESSAGE(WM_CLOSE),
          DEFINE_MESSAGE(WM_QUERYENDSESSION),
          DEFINE_MESSAGE(WM_ENDSESSION),
          DEFINE_MESSAGE(WM_QUIT),

          DEFINE_MESSAGE(WM_PAINT),
          DEFINE_MESSAGE(WM_SETREDRAW),
          DEFINE_MESSAGE(WM_ERASEBKGND),
          DEFINE_MESSAGE(WM_PRINT),
          DEFINE_MESSAGE(WM_PRINTCLIENT),

          DEFINE_MESSAGE(WM_CHAR),
          DEFINE_MESSAGE(WM_DEADCHAR),
          DEFINE_MESSAGE(WM_KEYDOWN),
          DEFINE_MESSAGE(WM_KEYUP),

          DEFINE_MESSAGE(WM_SYSCHAR),
          DEFINE_MESSAGE(WM_SYSDEADCHAR),
          DEFINE_MESSAGE(WM_SYSKEYDOWN),
          DEFINE_MESSAGE(WM_SYSKEYUP),

          DEFINE_MESSAGE(WM_HOTKEY),

          DEFINE_MESSAGE(WM_MOUSEACTIVATE),
          DEFINE_MESSAGE(WM_MOUSEHOVER),
          DEFINE_MESSAGE(WM_MOUSELEAVE),
          DEFINE_MESSAGE(WM_MOUSEMOVE),
          DEFINE_MESSAGE(WM_MOUSEWHEEL),
          DEFINE_MESSAGE(WM_MOUSEHWHEEL),

          DEFINE_MESSAGE(WM_LBUTTONDBLCLK),
          DEFINE_MESSAGE(WM_LBUTTONDOWN),
          DEFINE_MESSAGE(WM_LBUTTONUP),

          DEFINE_MESSAGE(WM_RBUTTONDBLCLK),
          DEFINE_MESSAGE(WM_RBUTTONDOWN),
          DEFINE_MESSAGE(WM_RBUTTONUP),

          DEFINE_MESSAGE(WM_MBUTTONDBLCLK),
          DEFINE_MESSAGE(WM_MBUTTONDOWN),
          DEFINE_MESSAGE(WM_MBUTTONUP),

          DEFINE_MESSAGE(WM_XBUTTONDBLCLK),
          DEFINE_MESSAGE(WM_XBUTTONDOWN),
          DEFINE_MESSAGE(WM_XBUTTONUP),

          DEFINE_MESSAGE(WM_CUT),
          DEFINE_MESSAGE(WM_COPY),
          DEFINE_MESSAGE(WM_PASTE),
          DEFINE_MESSAGE(WM_CLEAR),
          DEFINE_MESSAGE(WM_UNDO),

          DEFINE_MESSAGE(WM_GETTEXT),
          DEFINE_MESSAGE(WM_GETTEXTLENGTH),
          DEFINE_MESSAGE(WM_SETTEXT),

          DEFINE_MESSAGE(WM_GETFONT),
          DEFINE_MESSAGE(WM_SETFONT),
          DEFINE_MESSAGE(WM_FONTCHANGE),

          DEFINE_MESSAGE(WM_GETICON),
          DEFINE_MESSAGE(WM_SETICON),
          DEFINE_MESSAGE(WM_PAINTICON),
          DEFINE_MESSAGE(WM_ICONERASEBKGND),

          DEFINE_MESSAGE(WM_GETHOTKEY),
          DEFINE_MESSAGE(WM_SETHOTKEY),

          DEFINE_MESSAGE(WM_SETCURSOR),

          DEFINE_MESSAGE(WM_HSCROLL),
          DEFINE_MESSAGE(WM_VSCROLL),

          DEFINE_MESSAGE(WM_HSCROLLCLIPBOARD),
          DEFINE_MESSAGE(WM_VSCROLLCLIPBOARD),

          DEFINE_MESSAGE(WM_DRAWITEM),
          DEFINE_MESSAGE(WM_CHARTOITEM),
          DEFINE_MESSAGE(WM_COMPAREITEM),
          DEFINE_MESSAGE(WM_DELETEITEM),
          DEFINE_MESSAGE(WM_MEASUREITEM),
          DEFINE_MESSAGE(WM_VKEYTOITEM),

          DEFINE_MESSAGE(WM_PAINTCLIPBOARD),
          DEFINE_MESSAGE(WM_DRAWCLIPBOARD),

          DEFINE_MESSAGE(WM_APPCOMMAND),
          DEFINE_MESSAGE(WM_ASKCBFORMATNAME),

          DEFINE_MESSAGE(WM_CANCELJOURNAL),
          DEFINE_MESSAGE(WM_CANCELMODE),
          DEFINE_MESSAGE(WM_CAPTURECHANGED),
          DEFINE_MESSAGE(WM_CHANGECBCHAIN),
          DEFINE_MESSAGE(WM_CHANGEUISTATE),
          DEFINE_MESSAGE(WM_CHILDACTIVATE),
          DEFINE_MESSAGE(WM_CLIPBOARDUPDATE),

          DEFINE_MESSAGE(WM_COMMAND),
          DEFINE_MESSAGE(WM_COMMNOTIFY),
          DEFINE_MESSAGE(WM_COMPACTING),
          DEFINE_MESSAGE(WM_CONTEXTMENU),
          DEFINE_MESSAGE(WM_COPYDATA),

          DEFINE_MESSAGE(WM_CTLCOLORBTN),
          DEFINE_MESSAGE(WM_CTLCOLORDLG),
          DEFINE_MESSAGE(WM_CTLCOLOREDIT),
          DEFINE_MESSAGE(WM_CTLCOLORLISTBOX),
          DEFINE_MESSAGE(WM_CTLCOLORMSGBOX),
          DEFINE_MESSAGE(WM_CTLCOLORSCROLLBAR),
          DEFINE_MESSAGE(WM_CTLCOLORSTATIC),

          DEFINE_MESSAGE(WM_DESTROYCLIPBOARD),
          DEFINE_MESSAGE(WM_DEVICECHANGE),
          DEFINE_MESSAGE(WM_DEVMODECHANGE),
          DEFINE_MESSAGE(WM_DISPLAYCHANGE),
          DEFINE_MESSAGE(WM_DPICHANGED),
          DEFINE_MESSAGE(WM_DROPFILES),
          DEFINE_MESSAGE(WM_DWMCOLORIZATIONCOLORCHANGED),
          DEFINE_MESSAGE(WM_DWMCOMPOSITIONCHANGED),
          DEFINE_MESSAGE(WM_DWMNCRENDERINGCHANGED),
          DEFINE_MESSAGE(WM_DWMSENDICONICLIVEPREVIEWBITMAP),
          DEFINE_MESSAGE(WM_DWMSENDICONICTHUMBNAIL),
          DEFINE_MESSAGE(WM_DWMWINDOWMAXIMIZEDCHANGE),

          DEFINE_MESSAGE(WM_ENTERIDLE),
          DEFINE_MESSAGE(WM_ENTERMENULOOP),
          DEFINE_MESSAGE(WM_EXITMENULOOP),

          DEFINE_MESSAGE(WM_GESTURE),
          DEFINE_MESSAGE(WM_GESTURENOTIFY),
          DEFINE_MESSAGE(WM_GETDLGCODE),
          DEFINE_MESSAGE(WM_GETOBJECT),
          DEFINE_MESSAGE(WM_GETTITLEBARINFOEX),
          DEFINE_MESSAGE(WM_HELP),

          DEFINE_MESSAGE(WM_IME_CHAR),
          DEFINE_MESSAGE(WM_IME_COMPOSITION),
          DEFINE_MESSAGE(WM_IME_COMPOSITIONFULL),
          DEFINE_MESSAGE(WM_IME_CONTROL),
          DEFINE_MESSAGE(WM_IME_ENDCOMPOSITION),
          DEFINE_MESSAGE(WM_IME_KEYDOWN),
          DEFINE_MESSAGE(WM_IME_KEYLAST),
          DEFINE_MESSAGE(WM_IME_KEYUP),
          DEFINE_MESSAGE(WM_IME_NOTIFY),
          DEFINE_MESSAGE(WM_IME_REQUEST),
          DEFINE_MESSAGE(WM_IME_SELECT),
          DEFINE_MESSAGE(WM_IME_SETCONTEXT),
          DEFINE_MESSAGE(WM_IME_STARTCOMPOSITION),

          DEFINE_MESSAGE(WM_INITDIALOG),
          DEFINE_MESSAGE(WM_INITMENU),
          DEFINE_MESSAGE(WM_INITMENUPOPUP),

          DEFINE_MESSAGE(WM_INPUT),
          DEFINE_MESSAGE(WM_INPUTLANGCHANGE),
          DEFINE_MESSAGE(WM_INPUTLANGCHANGEREQUEST),
          DEFINE_MESSAGE(WM_INPUT_DEVICE_CHANGE),

          DEFINE_MESSAGE(WM_MDIACTIVATE),
          DEFINE_MESSAGE(WM_MDICASCADE),
          DEFINE_MESSAGE(WM_MDICREATE),
          DEFINE_MESSAGE(WM_MDIDESTROY),
          DEFINE_MESSAGE(WM_MDIGETACTIVE),
          DEFINE_MESSAGE(WM_MDIICONARRANGE),
          DEFINE_MESSAGE(WM_MDIMAXIMIZE),
          DEFINE_MESSAGE(WM_MDINEXT),
          DEFINE_MESSAGE(WM_MDIREFRESHMENU),
          DEFINE_MESSAGE(WM_MDIRESTORE),
          DEFINE_MESSAGE(WM_MDISETMENU),
          DEFINE_MESSAGE(WM_MDITILE),

          DEFINE_MESSAGE(WM_MENUCHAR),
          DEFINE_MESSAGE(WM_MENUCOMMAND),
          DEFINE_MESSAGE(WM_MENUDRAG),
          DEFINE_MESSAGE(WM_MENUGETOBJECT),
          DEFINE_MESSAGE(WM_MENURBUTTONUP),
          DEFINE_MESSAGE(WM_MENUSELECT),

          DEFINE_MESSAGE(WM_NCACTIVATE),
          DEFINE_MESSAGE(WM_NCCALCSIZE),
          DEFINE_MESSAGE(WM_NCCREATE),
          DEFINE_MESSAGE(WM_NCDESTROY),
          DEFINE_MESSAGE(WM_NCHITTEST),
          DEFINE_MESSAGE(WM_NCLBUTTONDBLCLK),
          DEFINE_MESSAGE(WM_NCLBUTTONDOWN),
          DEFINE_MESSAGE(WM_NCLBUTTONUP),
          DEFINE_MESSAGE(WM_NCMBUTTONDBLCLK),
          DEFINE_MESSAGE(WM_NCMBUTTONDOWN),
          DEFINE_MESSAGE(WM_NCMBUTTONUP),
          DEFINE_MESSAGE(WM_NCMOUSEHOVER),
          DEFINE_MESSAGE(WM_NCMOUSELEAVE),
          DEFINE_MESSAGE(WM_NCMOUSEMOVE),
          DEFINE_MESSAGE(WM_NCPAINT),
          DEFINE_MESSAGE(WM_NCPOINTERDOWN),
          DEFINE_MESSAGE(WM_NCPOINTERUP),
          DEFINE_MESSAGE(WM_NCPOINTERUPDATE),
          DEFINE_MESSAGE(WM_NCRBUTTONDBLCLK),
          DEFINE_MESSAGE(WM_NCRBUTTONDOWN),
          DEFINE_MESSAGE(WM_NCRBUTTONUP),
          DEFINE_MESSAGE(WM_NCXBUTTONDBLCLK),
          DEFINE_MESSAGE(WM_NCXBUTTONDOWN),
          DEFINE_MESSAGE(WM_NCXBUTTONUP),

          DEFINE_MESSAGE(WM_NEXTDLGCTL),
          DEFINE_MESSAGE(WM_NEXTMENU),
          DEFINE_MESSAGE(WM_NOTIFY),
          DEFINE_MESSAGE(WM_NOTIFYFORMAT),

          DEFINE_MESSAGE(WM_PALETTECHANGED),
          DEFINE_MESSAGE(WM_PALETTEISCHANGING),
          DEFINE_MESSAGE(WM_PARENTNOTIFY),
          DEFINE_MESSAGE(WM_POINTERACTIVATE),
          DEFINE_MESSAGE(WM_POINTERCAPTURECHANGED),
          DEFINE_MESSAGE(WM_POINTERDEVICECHANGE),
          DEFINE_MESSAGE(WM_POINTERDEVICEINRANGE),
          DEFINE_MESSAGE(WM_POINTERDEVICEOUTOFRANGE),
          DEFINE_MESSAGE(WM_POINTERDOWN),
          DEFINE_MESSAGE(WM_POINTERENTER),
          DEFINE_MESSAGE(WM_POINTERHWHEEL),
          DEFINE_MESSAGE(WM_POINTERLEAVE),
          DEFINE_MESSAGE(WM_POINTERUP),
          DEFINE_MESSAGE(WM_POINTERUPDATE),
          DEFINE_MESSAGE(WM_POINTERWHEEL),
          DEFINE_MESSAGE(WM_POWER),
          DEFINE_MESSAGE(WM_POWERBROADCAST),

          DEFINE_MESSAGE(WM_QUERYDRAGICON),
          DEFINE_MESSAGE(WM_QUERYNEWPALETTE),
          DEFINE_MESSAGE(WM_QUERYUISTATE),
          DEFINE_MESSAGE(WM_QUEUESYNC),

          DEFINE_MESSAGE(WM_RENDERALLFORMATS),
          DEFINE_MESSAGE(WM_RENDERFORMAT),

          DEFINE_MESSAGE(WM_SIZECLIPBOARD),
          DEFINE_MESSAGE(WM_SPOOLERSTATUS),
          DEFINE_MESSAGE(WM_STYLECHANGED),
          DEFINE_MESSAGE(WM_STYLECHANGING),
          DEFINE_MESSAGE(WM_SYNCPAINT),
          DEFINE_MESSAGE(WM_SYSCOLORCHANGE),
          DEFINE_MESSAGE(WM_SYSCOMMAND),

          DEFINE_MESSAGE(WM_TCARD),
          DEFINE_MESSAGE(WM_THEMECHANGED),
          DEFINE_MESSAGE(WM_TIMECHANGE),
          DEFINE_MESSAGE(WM_TIMER),
          DEFINE_MESSAGE(WM_TOUCH),
          DEFINE_MESSAGE(WM_TOUCHHITTESTING),

          DEFINE_MESSAGE(WM_UNICHAR),
          DEFINE_MESSAGE(WM_UNINITMENUPOPUP),
          DEFINE_MESSAGE(WM_UPDATEUISTATE),
          DEFINE_MESSAGE(WM_USERCHANGED),

          DEFINE_MESSAGE(WM_WININICHANGE),
          DEFINE_MESSAGE(WM_WTSSESSION_CHANGE),

          DEFINE_MESSAGE(BM_CLICK),
          DEFINE_MESSAGE(BM_GETCHECK),
          DEFINE_MESSAGE(BM_GETIMAGE),
          DEFINE_MESSAGE(BM_GETSTATE),
          DEFINE_MESSAGE(BM_SETCHECK),
          DEFINE_MESSAGE(BM_SETDONTCLICK),
          DEFINE_MESSAGE(BM_SETIMAGE),
          DEFINE_MESSAGE(BM_SETSTATE),
          DEFINE_MESSAGE(BM_SETSTYLE),

          DEFINE_MESSAGE(DM_GETDEFID),
          DEFINE_MESSAGE(DM_POINTERHITTEST),
          DEFINE_MESSAGE(DM_REPOSITION),
          DEFINE_MESSAGE(DM_SETDEFID),

          DEFINE_MESSAGE(EM_CANUNDO),
          DEFINE_MESSAGE(EM_CHARFROMPOS),
          DEFINE_MESSAGE(EM_EMPTYUNDOBUFFER),
          DEFINE_MESSAGE(EM_FMTLINES),
          DEFINE_MESSAGE(EM_GETFIRSTVISIBLELINE),
          DEFINE_MESSAGE(EM_GETHANDLE),
          DEFINE_MESSAGE(EM_GETIMESTATUS),
          DEFINE_MESSAGE(EM_GETLIMITTEXT),
          DEFINE_MESSAGE(EM_GETLINE),
          DEFINE_MESSAGE(EM_GETLINECOUNT),
          DEFINE_MESSAGE(EM_GETMARGINS),
          DEFINE_MESSAGE(EM_GETMODIFY),
          DEFINE_MESSAGE(EM_GETPASSWORDCHAR),
          DEFINE_MESSAGE(EM_GETRECT),
          DEFINE_MESSAGE(EM_GETSEL),
          DEFINE_MESSAGE(EM_GETTHUMB),
          DEFINE_MESSAGE(EM_GETWORDBREAKPROC),
          DEFINE_MESSAGE(EM_LIMITTEXT),
          DEFINE_MESSAGE(EM_LINEFROMCHAR),
          DEFINE_MESSAGE(EM_LINEINDEX),
          DEFINE_MESSAGE(EM_LINELENGTH),
          DEFINE_MESSAGE(EM_LINESCROLL),
          DEFINE_MESSAGE(EM_POSFROMCHAR),
          DEFINE_MESSAGE(EM_REPLACESEL),
          DEFINE_MESSAGE(EM_SCROLL),
          DEFINE_MESSAGE(EM_SCROLLCARET),
          DEFINE_MESSAGE(EM_SETHANDLE),
          DEFINE_MESSAGE(EM_SETIMESTATUS),
          DEFINE_MESSAGE(EM_SETMARGINS),
          DEFINE_MESSAGE(EM_SETMODIFY),
          DEFINE_MESSAGE(EM_SETPASSWORDCHAR),
          DEFINE_MESSAGE(EM_SETREADONLY),
          DEFINE_MESSAGE(EM_SETRECT),
          DEFINE_MESSAGE(EM_SETRECTNP),
          DEFINE_MESSAGE(EM_SETSEL),
          DEFINE_MESSAGE(EM_SETTABSTOPS),
          DEFINE_MESSAGE(EM_SETWORDBREAKPROC),

          DEFINE_MESSAGE(EM_UNDO),
          DEFINE_MESSAGE(LB_ADDFILE),
          DEFINE_MESSAGE(LB_ADDSTRING),
          DEFINE_MESSAGE(LB_DELETESTRING),
          DEFINE_MESSAGE(LB_DIR),
          DEFINE_MESSAGE(LB_FINDSTRING),
          DEFINE_MESSAGE(LB_FINDSTRINGEXACT),
          DEFINE_MESSAGE(LB_GETANCHORINDEX),
          DEFINE_MESSAGE(LB_GETCARETINDEX),
          DEFINE_MESSAGE(LB_GETCOUNT),
          DEFINE_MESSAGE(LB_GETCURSEL),
          DEFINE_MESSAGE(LB_GETHORIZONTALEXTENT),
          DEFINE_MESSAGE(LB_GETITEMDATA),
          DEFINE_MESSAGE(LB_GETITEMHEIGHT),
          DEFINE_MESSAGE(LB_GETITEMRECT),
          DEFINE_MESSAGE(LB_GETLISTBOXINFO),
          DEFINE_MESSAGE(LB_GETLOCALE),
          DEFINE_MESSAGE(LB_GETSEL),
          DEFINE_MESSAGE(LB_GETSELCOUNT),
          DEFINE_MESSAGE(LB_GETSELITEMS),
          DEFINE_MESSAGE(LB_GETTEXT),
          DEFINE_MESSAGE(LB_GETTEXTLEN),
          DEFINE_MESSAGE(LB_GETTOPINDEX),
          DEFINE_MESSAGE(LB_INITSTORAGE),
          DEFINE_MESSAGE(LB_INSERTSTRING),
          DEFINE_MESSAGE(LB_ITEMFROMPOINT),
          DEFINE_MESSAGE(LB_MSGMAX),
          DEFINE_MESSAGE(LB_MSGMAX),
          DEFINE_MESSAGE(LB_MSGMAX),
          DEFINE_MESSAGE(LB_MSGMAX),
          DEFINE_MESSAGE(LB_RESETCONTENT),
          DEFINE_MESSAGE(LB_SELECTSTRING),
          DEFINE_MESSAGE(LB_SELITEMRANGE),
          DEFINE_MESSAGE(LB_SELITEMRANGEEX),
          DEFINE_MESSAGE(LB_SETANCHORINDEX),
          DEFINE_MESSAGE(LB_SETCARETINDEX),
          DEFINE_MESSAGE(LB_SETCOLUMNWIDTH),
          DEFINE_MESSAGE(LB_SETCOUNT),
          DEFINE_MESSAGE(LB_SETCURSEL),
          DEFINE_MESSAGE(LB_SETHORIZONTALEXTENT),
          DEFINE_MESSAGE(LB_SETITEMDATA),
          DEFINE_MESSAGE(LB_SETITEMHEIGHT),
          DEFINE_MESSAGE(LB_SETLOCALE),
          DEFINE_MESSAGE(LB_SETSEL),
          DEFINE_MESSAGE(LB_SETTABSTOPS),
          DEFINE_MESSAGE(LB_SETTOPINDEX),

          DEFINE_MESSAGE(SBM_ENABLE_ARROWS),
          DEFINE_MESSAGE(SBM_GETPOS),
          DEFINE_MESSAGE(SBM_GETRANGE),
          DEFINE_MESSAGE(SBM_GETSCROLLBARINFO),
          DEFINE_MESSAGE(SBM_GETSCROLLINFO),
          DEFINE_MESSAGE(SBM_SETPOS),
          DEFINE_MESSAGE(SBM_SETRANGE),
          DEFINE_MESSAGE(SBM_SETRANGEREDRAW),
          DEFINE_MESSAGE(SBM_SETSCROLLINFO),
          DEFINE_MESSAGE(SW_ERASE)

#if defined(_WIN32_WCE) && (_WIN32_WCE >= 0x0400)
          , DEFINE_MESSAGE(LB_MULTIPLEADDSTRING)
#endif
#endif // WIN32

#ifdef X11
          DEFINE_MESSAGE(KeyPress),
          DEFINE_MESSAGE(KeyRelease),
          DEFINE_MESSAGE(ButtonPress),
          DEFINE_MESSAGE(ButtonRelease),
          DEFINE_MESSAGE(MotionNotify),
          DEFINE_MESSAGE(EnterNotify),
          DEFINE_MESSAGE(LeaveNotify),
          DEFINE_MESSAGE(FocusIn),
          DEFINE_MESSAGE(FocusOut),
          DEFINE_MESSAGE(KeymapNotify),
          DEFINE_MESSAGE(Expose),
          DEFINE_MESSAGE(GraphicsExpose),
          DEFINE_MESSAGE(NoExpose),
          DEFINE_MESSAGE(VisibilityNotify),
          DEFINE_MESSAGE(CreateNotify),
          DEFINE_MESSAGE(DestroyNotify),
          DEFINE_MESSAGE(UnmapNotify),
          DEFINE_MESSAGE(MapNotify),
          DEFINE_MESSAGE(MapRequest),
          DEFINE_MESSAGE(ReparentNotify),
          DEFINE_MESSAGE(ConfigureNotify),
          DEFINE_MESSAGE(ConfigureRequest),
          DEFINE_MESSAGE(GravityNotify),
          DEFINE_MESSAGE(ResizeRequest),
          DEFINE_MESSAGE(CirculateNotify),
          DEFINE_MESSAGE(CirculateRequest),
          DEFINE_MESSAGE(PropertyNotify),
          DEFINE_MESSAGE(SelectionClear),
          DEFINE_MESSAGE(SelectionRequest),
          DEFINE_MESSAGE(SelectionNotify),
          DEFINE_MESSAGE(ColormapNotify),
          DEFINE_MESSAGE(ClientMessage),
          DEFINE_MESSAGE(MappingNotify),
          DEFINE_MESSAGE(GenericEvent)
#endif // X11
        };
        return message_map;
      }
    }// detail

    bool is_frequent_event(core::event_id e) {
#ifdef WIN32
      return ((e == WM_MOUSEMOVE) ||
        (e == WM_NCMOUSEMOVE) ||
        (e == WM_NCHITTEST) ||
        (e == WM_SETCURSOR) ||
        (e == WM_CTLCOLORBTN) ||
        (e == WM_CTLCOLORDLG) ||
        (e == WM_CTLCOLOREDIT) ||
        (e == WM_CTLCOLORLISTBOX) ||
        (e == WM_CTLCOLORMSGBOX) ||
        (e == WM_CTLCOLORSCROLLBAR) ||
        (e == WM_CTLCOLORSTATIC) ||
        (e == WM_ENTERIDLE) ||
        (e == WM_CANCELMODE) ||
        (e == 0x0118));    // WM_SYSTIMER (caret blink)
#else
      return false;
#endif
    }

    bool is_none_client_event(core::event_id e) {
#ifdef WIN32
      return ((e >= WM_NCCREATE) && (e <= WM_NCACTIVATE)) ||
        ((e >= WM_NCMOUSEMOVE) && (e <= WM_NCMBUTTONDBLCLK)) ||
        ((e >= WM_NCXBUTTONDOWN) && (e <= WM_NCXBUTTONDBLCLK)) ||
        ((e >= WM_NCPOINTERUPDATE) && (e <= WM_NCPOINTERUP)) ||
        (e == WM_NCMOUSEHOVER) || (e == WM_NCMOUSELEAVE);
#else
      return false;
#endif
    }

  } // win

} // gui

namespace std {

  std::ostream& operator<<(std::ostream& out, const gui::win::EventId& e) {
    const char* msg = gui::win::detail::get_message_map()[e.id];
    if (msg) {
      out << msg;
#ifdef WIN32
    } else if ((e.id >= WM_USER) && (e.id < WM_APP)) {
      out << "WM_USER+" << (e.id - WM_USER);
    } else if ((e.id >= WM_APP) && (e.id < 0xC000)) {
      out << "WM_APP+" << (e.id - WM_APP);
#endif // WIN32
    } else {
      out << "0x" << std::hex << e.id;
    }
    return out;
  }

}